(defun convert-to-float ((b '(unsigned-byte 32)))
  (let ((a (/ (+ (aref b 0) (ash (aref b 1) 8) (ash (logand #b01111111 (aref b 2)) 16)) (ash 1 23)))
        (b (+ (ash (aref b 2) -7) (ash (logand #b01111111 (aref b 3)) 1)))
        (c (ash (aref b 3) -7)))
    (* (expt -1 c) (expt 2 (- b 127)) (+ 1 a))
    )
  )

(defun read-test (fname)
  (with-open-file (in fname :element-type :default)
    (let ((bin1 (make-array 4 :element-type '(unsigned-byte 8)))
          (bin2 (make-array 4 :element-type '(unsigned-byte 8)))
          )
      (read-sequence bin1 in)
      (read-sequence bin2 in)
      (print bin1)
      (print (convert-to-float bin2))
      )))
